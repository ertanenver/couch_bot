from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards import get_inlane_keyboard
from aiogram.utils.markdown import hlink
router = Router()

class Base(StatesGroup):
    start = State()
    help = State()
    kvit = State()
    info = State()
    act = State()
    owner = State()
    stat = State()

@router.message(CommandStart())
async def welcome(message: Message, state: FSMContext):
    await state.set_state(Base.start)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç!üëã', reply_markup=get_inlane_keyboard('welcome_msg'))

@router.message(Command('help'))
async def help(message: Message, state: FSMContext):
    await state.set_state(Base.help)
    await message.answer(f'üÜò –ü–æ–º–æ—â—å!\n\n–ß—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? <i>–ü–∏—à–∏—Ç–µ @shinyaa17</i>')

@router.message(Command('owner'))
async def help(message: Message, state: FSMContext):
    await state.set_state(Base.help)
    await message.answer(f'–í—ã –º–æ–∂–µ—Ç–µ —Å–æ –º–Ω–æ–π —Å–≤—è–∑–∞—Ç—å—Å—è <i>–∑–¥–µ—Å—å - @shinyaa17</i>')

@router.message(Command('act'))
async def help(message: Message, state: FSMContext):
    await state.set_state(Base.help)
    await message.answer(f'–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')

@router.message(Command('check'))
async def help(message: Message, state: FSMContext):
    await state.set_state(Base.help)
    await message.answer(f'–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')

@router.message(Command('stat'))
async def help(message: Message, state: FSMContext):
    await state.set_state(Base.help)
    await message.answer(f'–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')

@router.message(Command('info'))
async def info(message: Message, state: FSMContext):
    url = "https://docs.google.com/spreadsheets/d/1Y9reMBF4_aUSrJDeZ4VFnERJ9JkYlGJK/edit?usp=sharing&ouid=105467863721396286205&rtpof=true&sd=true"
    await state.set_state(Base.help)
    await message.answer(f'–ü–æ {hlink("—Å—Å—ã–ª–∫–µ", url)} —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ —Å–≤–µ—Ä–∫–∏.\n\n–í —Å—Ç–æ–ª–±—Ü–µ –ê –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏—à—å <u>—Ñ–∞–º–∏–ª–∏–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø.</u> '
                         f'–í —Å—Ç–æ–ª–±—Ü–µ –í –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è <u>—Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π(—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã) –∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä —Å—É–º–º–∞, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ, –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã</u>')
    await message.answer('0 –≤ —Å—É–º–º–∞—Ö –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è, –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –Ω–∞ –Ω–∏—Ö –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è, –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ 1')

@router.callback_query(F.data == 'button_0')
async def main_menu(call: CallbackQuery, state: FSMContext):
    await state.set_state(Base.start)
    await call.message.answer(f'–ü—Ä–∏–≤–µ—Ç!üëã', reply_markup=get_inlane_keyboard('welcome_msg'))
    await call.answer()
