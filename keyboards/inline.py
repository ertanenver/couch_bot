from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from funcs.get_month import get_month, months

def get_inlane_keyboard(mode):
    if mode == 'main_menu':
        keyb_main_menu = InlineKeyboardBuilder()
        keyb_main_menu.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        return keyb_main_menu.as_markup()

    if mode == 'welcome_msg':
        keyb_welcome_msg = InlineKeyboardBuilder()
        keyb_welcome_msg.button(text='–°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π', callback_data='kvit_mode')
        keyb_welcome_msg.button(text='–†–∞–±–æ—Ç–∞ —Å–æ —Å–≤–µ—Ä–∫–æ–π', callback_data='sverka_mode')
        #keyb_welcome_msg.button(text='–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è', callback_data='comp_mode')
        keyb_welcome_msg.button(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='settings')
        keyb_welcome_msg.adjust(2,1)
        return keyb_welcome_msg.as_markup()

    if mode == 'show_password':
        keyb_show_password = InlineKeyboardBuilder()
        keyb_show_password.button(text='–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å', callback_data='show_password')
        keyb_show_password.adjust(1)
        return keyb_show_password.as_markup()
    
    if mode == 'hide_password':
        keyb_hide_password = InlineKeyboardBuilder()
        keyb_hide_password.button(text='–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å', callback_data='hide_password')
        keyb_hide_password.adjust(1)
        return keyb_hide_password.as_markup()

#                               –ö–Ω–æ–ø–∫–∏ –ø–æ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è–º
    if mode == 'kvit':
        keyb_kvit = InlineKeyboardBuilder()
        keyb_kvit.button(text='–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞', callback_data='kvit_file_mode')
        keyb_kvit.button(text='–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –≤–µ–¥–æ–º–æ—Å—Ç–∏', callback_data='kvit_vedomost_mode')
        keyb_kvit.button(text='–°–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ', callback_data='kvit_local_mode')
        keyb_kvit.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_kvit.adjust(1)
        return keyb_kvit.as_markup()
    
    if mode == 'kvit_file_mode': # –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
        keyb_kvit_file_mode = InlineKeyboardBuilder()
        keyb_kvit_file_mode.button(text='–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª-—à–∞–±–ª–æ–Ω', callback_data='kvit_send_file_example')
        keyb_kvit_file_mode.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_kvit_file_mode.adjust(1)
        return keyb_kvit_file_mode.as_markup()

    if mode == 'kvit_local_mode': # –ª–æ–∫–∞–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
        keyb_kvit_local_mode = InlineKeyboardBuilder()
        keyb_kvit_local_mode.button(text='‚ûï', callback_data='kvit_local_mode_add_person')
        keyb_kvit_local_mode.button(text='‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data='kvit_local_mode_done')
        keyb_kvit_local_mode.button(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='kvit_local_mode_cancel')
        keyb_kvit_local_mode.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_kvit_local_mode.adjust(1,2,1)
        return keyb_kvit_local_mode.as_markup()

    if mode == 'kvit_purpose': # –æ–±—ã—á–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
        dict = get_month()
        keyb_kvit_purpose = InlineKeyboardBuilder()
        keyb_kvit_purpose.button(text=f'{dict["previous_month"].title()}', callback_data=f'kvit_purpose_previous_month')
        keyb_kvit_purpose.button(text=f'{dict["current_month"].title()}', callback_data=f'kvit_purpose_current_month')
        keyb_kvit_purpose.button(text=f'{dict["following_month"].title()}', callback_data=f'kvit_purpose_following_month')
        keyb_kvit_purpose.button(text=f'‚úèÔ∏è –í–≤–µ—Å—Ç–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ ‚úèÔ∏è', callback_data='kvit_input_purpose_mode')
        keyb_kvit_purpose.button(text=f'–ï–∂–µ–≥–æ–¥–Ω—ã–π —á–ª–µ–Ω—Å–∫–∏–π –≤–∑–Ω–æ—Å', callback_data='kvit_yearly_fee_mode')
        keyb_kvit_purpose.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_kvit_purpose.adjust(3,1,1,1)
        return keyb_kvit_purpose.as_markup()

    if mode == 'kvit_purpose_input_purpose_mode': 
        keyb_purpose_input_purpose_mode = InlineKeyboardBuilder()
        for month in months:
            keyb_purpose_input_purpose_mode.button(text=f'{months[month]}', callback_data=f'kvit_purpose_{month}')
        keyb_purpose_input_purpose_mode.adjust(3)
        return keyb_purpose_input_purpose_mode.as_markup()




#                               –ö–Ω–æ–ø–∫–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
    if mode == 'settings': 
        keyb_settings = InlineKeyboardBuilder()
        keyb_settings.button(text='üìÑ –ö–æ–ª-–≤–æ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –Ω–∞ –ª–∏—Å—Ç–µ', callback_data='settings_sum_kvit')
        keyb_settings.button(text='‚ö°Ô∏è –§–∏—á–∞', callback_data='settings_feature')
        keyb_settings.button(text='üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è', callback_data='settings_notification')
        keyb_settings.button(text='üë§ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞', callback_data='unlogin')
        keyb_settings.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_settings.adjust(1,1,2,1)
        return keyb_settings.as_markup()

    if mode == 'settings_notification': 
        keyb_settings_notification = InlineKeyboardBuilder()
        keyb_settings_notification.button(text='–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–µ–¥–æ–º–æ—Å—Ç–∏', callback_data='settings_notification_vedomost')
        keyb_settings_notification.button(text='–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π', callback_data='settings_notification_kvit')
        keyb_settings_notification.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_settings_notification.adjust(1)
        return keyb_settings_notification.as_markup()
    
    if mode == 'settings_sum_kvit':
        keyb_settings_sum_kvit = InlineKeyboardBuilder()
        keyb_settings_sum_kvit.button(text='3 –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏',callback_data="keyb_settings_sum_kvit_3")
        keyb_settings_sum_kvit.button(text='4 –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏',callback_data="keyb_settings_sum_kvit_4")
        keyb_settings_sum_kvit.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_settings_sum_kvit.adjust(2,1)
        return keyb_settings_sum_kvit.as_markup()



#                               –ö–Ω–æ–ø–∫–∏ –ø–æ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º
    if mode == 'comp':
        keyb_comp = InlineKeyboardBuilder()
        keyb_comp.button(text='üîç –ü–æ–∏—Å–∫', callback_data='comp_search')
        keyb_comp.button(text='üëä –°–∏–ª–∞ —É–¥–∞—Ä–∞ / —Ä–∞–∑–±–∏–≤–∞–Ω–∏–µ', callback_data='comp_sila_udara')
        keyb_comp.button(text='üëä –°–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞', callback_data='comp_sila_udara')
        keyb_comp.button(text='‚ÜóÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª', callback_data='comp_upload_protocol')
        keyb_comp.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_comp.adjust(1,1,1,2)
        return keyb_comp.as_markup()

    if mode == 'comp_search':
        keyb_comp_search = InlineKeyboardBuilder()
        keyb_comp_search.button(text='üîç –°–ø–æ—Ä—Ç—Å–º–µ–Ω ', callback_data='comp_search_sportsman')
        keyb_comp_search.button(text='üîç –¢—Ä–µ–Ω–µ—Ä ', callback_data='comp_search_coach')
        keyb_comp_search.button(text='üîç –ö–ª—É–± ', callback_data='comp_search_club')
        keyb_comp_search.button(text='üîç –†–µ–≥–∏–æ–Ω ', callback_data='comp_search_region')
        keyb_comp_search.button(text='–í –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚§¥Ô∏è', callback_data='button_0')
        keyb_comp_search.adjust(2,2,1)
        return keyb_comp_search.as_markup()
        
        
        